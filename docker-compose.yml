version: '3.8' # Specify the Docker Compose file format version

services:
  # Service for your Node.js Express backend application
  app:
    build:
      context: . # Build the image from the current directory (where Dockerfile is located)
      dockerfile: Dockerfile # Specify the Dockerfile to use for this service
    ports:
      - "8080:8080" # Map host machine's port 8080 to container's port 8080
    environment:
      # Environment variables for your Node.js application
      # These will be available inside the 'app' container
      DB_USER: myuser            # Matches POSTGRES_USER in the 'db' service
      DB_PASSWORD: mypassword    # Matches POSTGRES_PASSWORD in the 'db' service
      DB_NAME: mycapstonedb      # Matches POSTGRES_DB in the 'db' service
      DB_HOST: db                # CRITICAL: This is the name of the database service within the Docker network
      DB_PORT: 5432              # Standard PostgreSQL port
      PORT: 8080                 # The port your Node.js app listens on (from server.ts)
    depends_on:
      - db # Ensures the 'db' service starts before the 'app' service
    restart: unless-stopped # Always restart the container unless it is explicitly stopped

  # Service for your PostgreSQL database
  db:
    image: postgres:13-alpine # Use the official PostgreSQL image (version 13, Alpine variant for smaller size)
    ports:
      - "5432:5432" # Map host machine's port 5432 to container's port 5432
                   # This allows you to connect to the DB directly from your host (e.g., with DBeaver)
    environment:
      # Environment variables for configuring the PostgreSQL database
      POSTGRES_USER: myuser         # The superuser for the database
      POSTGRES_PASSWORD: mypassword # The password for the superuser
      POSTGRES_DB: mycapstonedb     # The initial database to create
    volumes:
      # Mount a named volume to persist database data
      # This ensures your data is not lost when the container is stopped or removed
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped # Always restart the container unless it is explicitly stopped

# Define the named volumes used by the services
volumes:
  pg_data: # This is the volume for PostgreSQL data persistence